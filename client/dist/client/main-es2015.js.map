{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAA0C;;;AAQnC,MAAM,YAAY;IAEvB,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QADnC,UAAK,GAAK,EAAE;IACyB,CAAC;IACtC,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YAEtE,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC;QACjB,CAAC,CAAC;IACJ,CAAC;;wEARU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,qEACE;QAAA,gGACF;QAAA,4DAAK;QACL,qEAAI;QAAA,4FAAiC;QAAA,4DAAK;QAC1C,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACf,qEAAK;QAAA,+FAAmC;QAAA,4DAAK;QAC7C,qEAAI;QAAA,4HAAgE;QAAA,4DAAK;QAIzE,sEAAI;QAAA,wDAAgB;QAAA,4DAAK;QACzB,sEAAI;QAAA,wDAAmB;QAAA,4DAAK;QAC5B,sEAAI;QAAA,gIAAoE;QAAA,4DAAK;QAC/E,4DAAM;;QAHA,2DAAgB;QAAhB,iFAAgB;QAChB,0DAAmB;QAAnB,6FAAmB;;6FDJZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACc;AAER;;AAaxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,qEAAgB;SACjB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,qEAAgB;6FAKP,SAAS;cAXrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  users:any=[]\n  constructor(private http:HttpClient){}\n  ngOnInit(){\n    this.http.get('http://52.66.252.216:3000/api/users').subscribe((data)=>\n    //this.http.get('http://localhost:3000/api/users').subscribe((data)=>\n    {this.users=data;\n    })\n  }\n    \n    // fetch('http://localhost:3000/api/users')\n    // .then(response => response.text())\n    // .then(data =>{\n    //   eval(`${data}`)\n    //   console.log(data)\n    // })\n    // .catch(error => console.error(error));\n    // }\n}\n","<div style=\"text-align: center\">\n  <h1>\n    This is to show you a MIDDLE FINGER \n  </h1> \n  <h2>So that you can put a ring on it </h2>\n  <h3>:D :D </h3>\n  <h4> Here is to propose you on Internet </h4>\n  <h5>So that I can show off to the world that I love this man called </h5>\n  <!-- <div *ngFor=\"let user of users\">\n   <h1>{{user.name}} </h1>\n  </div>  -->\n  <h1>{{users.myLove}}</h1>\n  <h6>- {{users.hisLove}}</h6>\n  <h6>Ps: If you check the network call, we are been fetched from there ;)</h6>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}