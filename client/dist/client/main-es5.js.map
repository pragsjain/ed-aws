{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/socketio.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","http","socketService","users","url","SOCKET_ENDPOINT","get","subscribe","data","setupSocketConnection","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","SocketioService","socket","emit","console","log","on","my","providedIn","environment","production","aws_server","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { SocketioService } from './socketio.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  users:any=[]\n  constructor(private http:HttpClient, private socketService:SocketioService){}\n  ngOnInit(){\n    let url=environment.SOCKET_ENDPOINT+'/api/users';\n    this.http.get(url).subscribe((data)=>\n    //this.http.get('http://localhost:3000/api/users').subscribe((data)=>\n    //this.http.get('api/api/users').subscribe((data)=>\n    {this.users=data;\n    })\n\n    //socket\n    this.socketService.setupSocketConnection();\n  }\n    \n    // fetch('http://localhost:3000/api/users')\n    // .then(response => response.text())\n    // .then(data =>{\n    //   eval(`${data}`)\n    //   console.log(data)\n    // })\n    // .catch(error => console.error(error));\n    // }\n}\n","<div style=\"text-align: center\">\n\n  <div *ngFor=\"let user of users\">\n   <h1>{{user.name}} </h1>\n  </div> \n \n\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { SocketioService } from './socketio.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [SocketioService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketioService {\n  socket;\n  constructor() { }\n  \n  setupSocketConnection() {\n    this.socket = io(environment.SOCKET_ENDPOINT);\n    this.socket.emit('my message', 'Hello there from Angular.');\n    console.log('socket started');\n\n    this.socket.emit('connect', {data: 'data'});\n        this.socket.on('news', (data)=>{\n        console.log(data);\n       this.socket.emit('my other event', { my: 'data' });\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  SOCKET_ENDPOINT: 'http://localhost:3000',\n  aws_server:'http://52.66.252.216:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}